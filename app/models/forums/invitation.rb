class Forums::Invitation < ApplicationRecord
  # extends ...................................................................
  # includes ..................................................................
  # constants .................................................................
  # relationships .............................................................
  belongs_to :forum
  belongs_to :user, optional: true
  # validations ...............................................................
  validates :token, presence: true, uniqueness: true
  # callbacks .................................................................
  before_validation :ensure_token
  # scopes ....................................................................
  scope :available, -> { where(accepted_at: nil) }
  # additional config (i.e. accepts_nested_attribute_for etc...) ..............
  # class methods .............................................................
  # public instance methods ...................................................
  def used_by(user)
    update(user: user, accepted_at: Time.zone.now)
  end

  # protected instance methods ................................................
  # private instance methods ..................................................

  private

  def ensure_token
    self.token ||= loop do
      random_token = SecureRandom.urlsafe_base64(nil, false)
      break random_token unless self.class.exists?(token: random_token)
    end
  end
end
